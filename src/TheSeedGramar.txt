PROGRAM -> PROGRAMVAR PROGRAMBODY ;

PROGRAMVAR -> PROGRAMVAR : { ASSIGM }

ASSIGM -> TYPE id = { num } ;

ASSIGM ->TYPE id = { id } ; ASSIGM

TYPE -> int
TYPE -> double
TYPE -> bool
TYPE -> real

PROGRAMBODY -> begin { STM } end

STM -> TERM
STM -> STM TERM

TERM -> ATRIB
TERM -> if ( EXPL ) { STM }
TERM -> switch ( id ){ CASE_TERM }
TERM -> while ( EXPL ){ STM }
TERM -> for ( id ; EXPR ; id ) { STM }
TERM -> print ( " char " , id ) ;
TERM -> scan ( TYPE , id ) ;

EXPL -> id && LTERM
EXPL -> id || LTERM
EXPL -> id ^ LTERM
EXPL -> !EXPL
EXPL -> !id
LTERM -> id EXPL
LTERM -> id


EXPR -> id == RTERM
EXPR -> id != RTERM
EXPR -> id >= RTERM
EXPR -> id <= RTERM
EXPR -> id > RTERM
EXPR -> id < RTERM
RTERM -> (EXPB)
RTERM -> RFACT
RFACT -> EXPR
RFACT -> id


EXPB -> id + BTERM
EXPB -> id - BTERM
EXPB -> id * BTERM
EXPB -> id / BTERM
BTERM -> ( EXPB )
BTERM -> BFACT
BFACT -> EXPB
BFACT -> id

